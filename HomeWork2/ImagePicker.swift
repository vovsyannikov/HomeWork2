//
//  File.swift
//  HomeWork2
//
//  Created by –í–∏—Ç–∞–ª–∏–π –û–≤—Å—è–Ω–Ω–∏–∫–æ–≤ on 29.10.2020.
//

import Foundation
import UIKit
import ObjectiveC

class PickedImage {
    // class PickedImage –Ω–µ–∫–∏–π "–ø—Ä–æ–∫—Å–∏-—Å–µ—Ä–≤–µ—Ä"
    // –ø—Ä–∏–Ω–∏–º–∞—é—â–∏–π(—á–µ—Ä–µ–∑ init) –∏ –æ—Ç–¥–∞—é—â–∏–π –∑–Ω–∞—á–µ–Ω–∏–µ
    var value: ((UIImage?) -> ())?
    init(_ value: @escaping (UIImage?) -> ()) {
        // @escaping —É–¥–µ—Ä–∂–∏—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –≤ –ø–∞–º—è—Ç–∏ –¥–æ —Ç–æ–≥–æ –º–æ–º–µ–Ω—Ç–∞, –∫–æ–≥–¥–∞ —ç—Ç–æ –∑–Ω–∞—á–µ–Ω–∏–µ –±—É–¥–µ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–ª—É—á–∏—Ç—å
        self.value = value
    }
}

extension UIImagePickerController: UIImagePickerControllerDelegate & UINavigationControllerDelegate {
    
    open override func viewDidLoad() {
        super.viewDidLoad()
        // –æ–±—ä—è–≤–ª—è–µ–º –¥–µ–ª–µ–≥–∞—Ç–æ–º —Å–∞–º UIImagePickerController
        self.delegate = self
    }
    
    struct AssociatedKey {
        static var ImagePickedKey = "ImagePickedKey"
    }
    
    typealias ImagePicked = (UIImage?) -> (Void)
    var configurateImagePicked: ImagePicked? {
        get {
            print("getting ‚û°Ô∏è")
            // –ø–æ–ª—É—á–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è —É PickedImage –¥–ª—è –æ–±—ä–µ–∫—Ç–∞ –ø–æ –∫–ª—é—á—É
            let img = objc_getAssociatedObject(
                self, // –æ–±—ä–µ–∫—Ç
                &AssociatedKey.ImagePickedKey // –∫–ª—é—á
            ) as? PickedImage
            return img?.value
        }
        set {
            print("setting ‚¨ÖÔ∏è")
            objc_setAssociatedObject(
                self, // –æ–±—ä–µ–∫—Ç –¥–ª—è –∫–æ—Ç–æ—Ä–æ–≥–æ —Å–æ–∑–¥–∞–µ—Ç—Å—è —Å–≤—è–∑—å
                
                &AssociatedKey.ImagePickedKey, // —É–Ω–∏–∫–∞–ª—å–Ω—ã–π(!) –∫–ª—é—á –¥–ª—è –∞—Å—Å–æ—Ü–∏–∞—Ü–∏–∏
                
                PickedImage(newValue!), // –∑–Ω–∞—á–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç —Å–≤—è–∑–∞–Ω–æ —Å –æ–±—ä–µ–∫—Ç–æ–º
                
                objc_AssociationPolicy.OBJC_ASSOCIATION_RETAIN)
            // objc_AssociationPolicy –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –ø–æ–≤–µ–¥–µ–Ω–∏–µ(—Ç–∏–ø) —Å–≤—è–∑–∏ –º–µ–∂–¥—É –æ–±—ä–µ–∫—Ç–æ–º –∏ –∑–Ω–∞—á–µ–Ω–∏–µ–º
            // OBJC_ASSOCIATION_RETAIN - —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç —Å–∏–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É –Ω–∞ –∑–Ω–∞—á–µ–Ω–∏–µ –∞—Ç–æ–º–∞—Ä–Ω–æ(–æ–ø–µ—Ä–∞—Ü–∏—è –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —Ü–µ–ª–∏–∫–æ–º, –ª–∏–±–æ –Ω–µ –≤—ã–ø–æ–ª–Ω–∏—Ç—Å—è –≤–æ–≤—Å–µ), –∏ –∑–Ω–∞—á–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –¥–æ —Ç–µ—Ö –ø–æ—Ä, –ø–æ–∫–∞ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –æ–±—ä–µ–∫—Ç, –∫ –∫–æ—Ç–æ—Ä–æ–º—É –æ–Ω –±—ã–ª –ø—Ä–∏–≤—è–∑–∞–Ω.
            // https://ru.wikipedia.org/wiki/–ê—Ç–æ–º–∞—Ä–Ω–∞—è_–æ–ø–µ—Ä–∞—Ü–∏—è
        }
    }
    
    func swizzling(vc: UIViewController, callback: ImagePicked?) {
        // callback = completion
        print("swizzling: ‚úÖ")
        
        print("swizzlingPicker: [\(UIImagePickerController.swizzlingPicker)]")
        
        //- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
        //MARK: toggle –æ–¥–Ω–æ–∫—Ä–∞—Ç–Ω–æ(!) –≤—ã–ø–æ–ª–Ω–∏—Ç swizzlingPicker
        //MARK: —Ç–µ–º —Å–∞–º—ã–º –∫–∞—Ä—Ç–∏–Ω–∫–∞ –≤ UIImageView –±—É–¥–µ—Ç –º–µ–Ω—è—Ç—å—Å—è
        UIImagePickerController.swizzlingPicker.toggle()
        //- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
        
        //- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
        //MARK: –Ω–µ —Å—Ç–æ–∏—Ç –ø–æ–¥–º–µ–Ω—è—Ç—å –¥–µ–ª–µ–≥–∞—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –≤ viewDidLoad, –∏–Ω–∞—á–µ –æ–Ω –Ω–µ —Å–º–æ–∂–µ—Ç –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –≤—ã–±—Ä–∞–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
        //self.delegate = vc as? UIImagePickerControllerDelegate & UINavigationControllerDelegate
        //- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
        
        // "–ø—Ä–∏–≤—è–∑—ã–≤–∞–µ–º" callback –∫ configurateImagePicked
        // –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –≤–Ω—É—Ç—Ä–∏ —Ñ—É–Ω–∫—Ü–∏–∏ –∏ –¥–∞–ª—å–Ω–µ–π—à–µ–º—É –≤—ã–≤–æ–¥—É
        self.configurateImagePicked = callback
        
        // –ø–æ–∫–∞–∑ UIImagePickerController
        vc.present(self, animated: true, completion: nil)
    }
    
    fileprivate static var swizzlingPicker: Bool = {
        // #selector –≤—ã–ø–æ–ª–Ω–∏—Ç —Ñ—É–Ω–∫—Ü–∏—é –∏ –ø—Ä–æ–≤–µ—Ä–∏—Ç —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –º–µ—Ç–æ–¥–∞
        let originalSelector = #selector(UIImagePickerController.imagePickerController(_:didFinishPickingMediaWithInfo:))
        let swizzledSelector = #selector(UIImagePickerController.extImagePickerController(_:didFinishPickingMediaWithInfo:))
        
        // –∫–ª–∞—Å—Å –≤ –∫–æ—Ç–æ—Ä–æ–º –±—É–¥—É—Ç –∑–∞–º–µ–Ω–µ–Ω—ã –º–µ—Ç–æ–¥—ã
        let instanceClass = UIImagePickerController.self
        
        // –æ–ø–∏—Å–∞–Ω–∏–µ –∏ –≤—ã–∑–æ–≤ –º–µ—Ç–æ–¥–æ–≤
        let originalMethod = class_getInstanceMethod(instanceClass, originalSelector)
        let swizzledMethod = class_getInstanceMethod(instanceClass, swizzledSelector)
        
        let didAddMethod =
            class_addMethod(instanceClass, originalSelector,
                            method_getImplementation(swizzledMethod!),
                            method_getTypeEncoding(swizzledMethod!))
        
        if didAddMethod {
            print("didAddMethod: replaceMethod")
            class_replaceMethod(instanceClass, swizzledSelector,
                                method_getImplementation(originalMethod!),
                                method_getTypeEncoding(originalMethod!))
        } else {
            print("didAddMethod: exchange ")
            method_exchangeImplementations(originalMethod!, swizzledMethod!)
        }
        return true
    }()
    
    @objc public func extImagePickerController(_ picker: UIImagePickerController, didFinishPickingMediaWithInfo info: [UIImagePickerController.InfoKey : Any]) {
        
        // –ø—Ä–∏–µ–º –¥–∞–Ω–Ω—ã—Ö –∏–∑ UIImagePickerController
        let originalImage = info[.originalImage] as? UIImage
        
        // –ø—Ä–∏—Å–≤–æ–µ–Ω–∏–µ –∫–∞—Ä—Ç–∏–Ω–∫–∏ –≤ configurateImagePicked
        self.configurateImagePicked?(originalImage)
        
        print("Finish Picking üëç")
        
        self.dismiss(animated: true, completion: {
            print("swizzlingPicker: [\(UIImagePickerController.swizzlingPicker)]")
            print("extImagePickerController: dismiss")
        })
    }
    
    @objc public func imagePickerController(_ picker: UIImagePickerController, didFinishPickingMediaWithInfo info: [UIImagePickerController.InfoKey : Any]) {
        
        print("Fail swizzling ü§¶‚Äç‚ôÇÔ∏è")
        
        self.dismiss(animated: true, completion: {
            print("imagePickerController: dismiss")
        })
    }
}

